
AnyFolder JointsAndDrivers = {
#ifndef FORCE_MODEL_LOAD_WHEN_DATA_FILES_ARE_MISSING
  // Macro for initializing a empty mxn matrix
  #define _ZEROS(m,n) 0.0*farr( 0.0, 1.0, m)'*{farr( 0.0, 1.0, n)}
  
  AnyKinDriver JntDriverTrunk = {
    AnyFunInterpol InterpolatedData = {
      AnyInputFile FileReader = {
          FileName = TEMP_PATH + "/" + MOCAP_OUTPUT_FILENAME_PREFIX + Main.ModelSetup.TrialSpecificData.TrialFileName + "-euler-trunk.txt";
          FileErrorContinueOnOff = On;
          #if ANYBODY_V1 >= 6 & ANYBODY_V2 >= 1
          //HACK WORKAROUND. We need to garantie that that T0 is valid for interpolation, due
          // to a bug 6.1 beta
          ReloadOnOff = On;
          T0 = .....tArray-2*.....Kinematics.ApproxVelAccPerturb ;
          Data0 =  _ZEROS(..nDim, NumElemOf(T0) );
          #endif

      };
      Type  = Bspline;
      BsplineOrder = 4;
      Data = FileReader.Data;
      T = FileReader.T;
    };
    AnyKinMeasureOrg &PelvisPosX = ...BodyModel.Interface.Trunk.PelvisPosX;
    AnyKinMeasureOrg &PelvisPosY = ...BodyModel.Interface.Trunk.PelvisPosY;
    AnyKinMeasureOrg &PelvisPosZ = ...BodyModel.Interface.Trunk.PelvisPosZ;
    AnyKinMeasureOrg &PelvisRotX = ...BodyModel.Interface.Trunk.PelvisRotX;
    AnyKinMeasureOrg &PelvisRotY = ...BodyModel.Interface.Trunk.PelvisRotY;
    AnyKinMeasureOrg &PelvisRotZ = ...BodyModel.Interface.Trunk.PelvisRotZ;
    AnyKinMeasureOrg &PelvisThoraxExtension = ...BodyModel.Interface.Trunk.PelvisThoraxExtension;
    AnyKinMeasureOrg &PelvisThoraxLateralBending = ...BodyModel.Interface.Trunk.PelvisThoraxLateralBending;
    AnyKinMeasureOrg &PelvisThoraxRotation = ...BodyModel.Interface.Trunk.PelvisThoraxRotation;
    #if BM_TRUNK == ON & BM_TRUNK_NECK == OFF
    AnyKinMeasureOrg &NeckExtension = ...BodyModel.Interface.Trunk.NeckJoint;
    Reaction.Type= {Off,Off,Off,Off,Off,Off,Off,Off,Off,Off};
    #endif 
    #if BM_TRUNK_NECK == ON
    AnyKinMeasureOrg& SkullThoraxFlexion = ...BodyModel.Interface.Trunk.SkullThoraxFlexion;
    AnyKinMeasureOrg& SkullThoraxLateralBending = ...BodyModel.Interface.Trunk.SkullThoraxLateralBending;
    AnyKinMeasureOrg& SkullThoraxRotation = ...BodyModel.Interface.Trunk.SkullThoraxRotation; 
    Reaction.Type={Off,Off,Off,Off,Off,Off,Off,Off,Off,Off,Off,Off};
    #endif
  };
  
  #if BM_LEG_LEFT == CONST_LEG_MODEL_TLEM  
  AnyKinDriver JntDriverLeftLegTD = {
    AnyFunInterpol InterpolatedData = {
      AnyInputFile FileReader = {
          FileName = TEMP_PATH + "/" + MOCAP_OUTPUT_FILENAME_PREFIX + Main.ModelSetup.TrialSpecificData.TrialFileName + "-euler-leftlegtd.txt";
          FileErrorContinueOnOff = On;
          #if ANYBODY_V1 >= 6 & ANYBODY_V2 >= 1
          //HACK WORKAROUND. We need to garantie that that T0 is valid for interpolation, due
          // to a bug 6.1 beta
          ReloadOnOff = On;
          T0 = .....tArray-2*.....Kinematics.ApproxVelAccPerturb ;
          Data0 =  _ZEROS(..nDim, NumElemOf(T0) );
          #endif
      };
      Type  = Bspline;
      BsplineOrder = 4;
      Data = FileReader.Data;
      T = FileReader.T;
    };
    AnyKinMeasureOrg &HipFlexion = ...BodyModel.Interface.Left.HipFlexion;
    AnyKinMeasureOrg &HipAbduction = ...BodyModel.Interface.Left.HipAbduction;
    AnyKinMeasureOrg &HipExternalRotation = ...BodyModel.Interface.Left.HipExternalRotation;
    AnyKinMeasureOrg &KneeFlexion = ...BodyModel.Interface.Left.KneeFlexion;
    AnyKinMeasureOrg &AnklePlantarFlexion = ...BodyModel.Interface.Left.AnklePlantarFlexion;
    AnyKinMeasureOrg &SubTalarEversion = ...BodyModel.Interface.Left.SubTalarEversion;
    Reaction.Type={Off,Off,Off,Off,Off,Off};
  };
  #endif
  
  
  #if BM_LEG_RIGHT == CONST_LEG_MODEL_TLEM  
  AnyKinDriver JntDriverRightLegTD = {
    AnyFunInterpol InterpolatedData = {
      AnyInputFile FileReader = {
          FileName = TEMP_PATH + "/" + MOCAP_OUTPUT_FILENAME_PREFIX + Main.ModelSetup.TrialSpecificData.TrialFileName + "-euler-rightlegtd.txt";
          FileErrorContinueOnOff = On;
          #if ANYBODY_V1 >= 6 & ANYBODY_V2 >= 1
          //HACK WORKAROUND. We need to garantie that that T0 is valid for interpolation, due
          // to a bug 6.1 beta
          ReloadOnOff = On;
          T0 = .....tArray-2*.....Kinematics.ApproxVelAccPerturb ;
          Data0 =  _ZEROS(..nDim, NumElemOf(T0) );
          #endif
      };
      Type  = Bspline;
      BsplineOrder = 4;
      Data = FileReader.Data;
      T = FileReader.T;
    };
    AnyKinMeasureOrg &HipFlexion = ...BodyModel.Interface.Right.HipFlexion;
    AnyKinMeasureOrg &HipAbduction = ...BodyModel.Interface.Right.HipAbduction;
    AnyKinMeasureOrg &HipExternalRotation = ...BodyModel.Interface.Right.HipExternalRotation;
    AnyKinMeasureOrg &KneeFlexion = ...BodyModel.Interface.Right.KneeFlexion;
    AnyKinMeasureOrg &AnklePlantarFlexion = ...BodyModel.Interface.Right.AnklePlantarFlexion;
    AnyKinMeasureOrg &SubTalarEversion = ...BodyModel.Interface.Right.SubTalarEversion;
    Reaction.Type={Off,Off,Off,Off,Off,Off};
  };
  #endif

  
  
  #if BM_LEG_LEFT == CONST_LEG_MODEL_Leg 
  AnyKinDriver JntDriverLeftLeg = {
    AnyFunInterpol InterpolatedData = {
      AnyInputFile FileReader = {
          FileName = TEMP_PATH + "/" + MOCAP_OUTPUT_FILENAME_PREFIX + Main.ModelSetup.TrialSpecificData.TrialFileName + "-euler-leftleg.txt";
          FileErrorContinueOnOff = On;
          #if ANYBODY_V1 >= 6 & ANYBODY_V2 >= 1
          //HACK WORKAROUND. We need to garantie that that T0 is valid for interpolation, due
          // to a bug 6.1 beta
          ReloadOnOff = On;
          T0 = .....tArray-2*.....Kinematics.ApproxVelAccPerturb ;
          Data0 =  _ZEROS(..nDim, NumElemOf(T0) );
          #endif
      };
      Type  = Bspline;
      BsplineOrder = 4;
      Data = FileReader.Data;
      T = FileReader.T;
    };
    AnyKinMeasureOrg &HipFlexion = ...BodyModel.Interface.Left.HipFlexion;
    AnyKinMeasureOrg &HipAbduction = ...BodyModel.Interface.Left.HipAbduction;
    AnyKinMeasureOrg &HipExternalRotation = ...BodyModel.Interface.Left.HipExternalRotation;
    AnyKinMeasureOrg &KneeFlexion = ...BodyModel.Interface.Left.KneeFlexion;
    AnyKinMeasureOrg &AnklePlantarFlexion = ...BodyModel.Interface.Left.AnklePlantarFlexion;
    AnyKinMeasureOrg &AnkleEversion = ...BodyModel.Interface.Left.AnkleEversion;
    Reaction.Type=1000*{Off,Off,Off,Off,Off,Off};
  };
  #endif
  
  
  #if BM_LEG_RIGHT== CONST_LEG_MODEL_Leg 
  AnyKinDriver JntDriverRightLeg = {
    AnyFunInterpol InterpolatedData = {
      AnyInputFile FileReader = {
          FileName = TEMP_PATH + "/" + MOCAP_OUTPUT_FILENAME_PREFIX + Main.ModelSetup.TrialSpecificData.TrialFileName + "-euler-rightleg.txt";
          FileErrorContinueOnOff = On;
          #if ANYBODY_V1 >= 6 & ANYBODY_V2 >= 1
          //HACK WORKAROUND. We need to garantie that that T0 is valid for interpolation, due
          // to a bug 6.1 beta
          ReloadOnOff = On;
          T0 = .....tArray-2*.....Kinematics.ApproxVelAccPerturb ;
          Data0 =  _ZEROS(..nDim, NumElemOf(T0) );
          #endif
      };
      Type  = Bspline;
      BsplineOrder = 4;
      Data = FileReader.Data;
      T = FileReader.T;
    };
    AnyKinMeasureOrg &HipFlexion = ...BodyModel.Interface.Right.HipFlexion;
    AnyKinMeasureOrg &HipAbduction = ...BodyModel.Interface.Right.HipAbduction;
    AnyKinMeasureOrg &HipExternalRotation = ...BodyModel.Interface.Right.HipExternalRotation;
    AnyKinMeasureOrg &KneeFlexion = ...BodyModel.Interface.Right.KneeFlexion;
    AnyKinMeasureOrg &AnklePlantarFlexion = ...BodyModel.Interface.Right.AnklePlantarFlexion;
    AnyKinMeasureOrg &AnkleEversion = ...BodyModel.Interface.Right.AnkleEversion;
    Reaction.Type={Off,Off,Off,Off,Off,Off};
  };
  #endif
  
  
  
  #if BM_ARM_LEFT == ON
  AnyKinDriver JntDriverLeftArm = {
    AnyFunInterpol InterpolatedData = {
      AnyInputFile FileReader = {
          FileName = TEMP_PATH + "/" + MOCAP_OUTPUT_FILENAME_PREFIX + Main.ModelSetup.TrialSpecificData.TrialFileName + "-euler-leftarm.txt";
          FileErrorContinueOnOff = On;
          #if ANYBODY_V1 >= 6 & ANYBODY_V2 >= 1
          //HACK WORKAROUND. We need to garantie that that T0 is valid for interpolation, due
          // to a bug 6.1 beta
          ReloadOnOff = On;
          T0 = .....tArray-2*.....Kinematics.ApproxVelAccPerturb ;
          Data0 =  _ZEROS(..nDim, NumElemOf(T0) );
          #endif
      };
      Type  = Bspline;
      BsplineOrder = 4;
      Data = FileReader.Data;
      T = FileReader.T;
    };
    AnyKinMeasureOrg &SternoClavicularProtraction=...BodyModel.Interface.Left.SternoClavicularProtraction;
    AnyKinMeasureOrg &SternoClavicularElevation=...BodyModel.Interface.Left.SternoClavicularElevation;
    AnyKinMeasureOrg &SternoClavicularAxialRotation=...BodyModel.Interface.Left.SternoClavicularAxialRotation;
    AnyKinMeasureOrg &GlenohumeralFlexion = ...BodyModel.Interface.Left.GlenohumeralFlexion;
    AnyKinMeasureOrg &GlenohumeralExternalRotation = ...BodyModel.Interface.Left.GlenohumeralExternalRotation;
    AnyKinMeasureOrg &GlenohumeralAbduction = ...BodyModel.Interface.Left.GlenohumeralAbduction; 
    AnyKinMeasureOrg &ElbowFlexion = ...BodyModel.Interface.Left.ElbowFlexion;
    AnyKinMeasureOrg &ElbowPronation = ...BodyModel.Interface.Left.ElbowPronation;
    AnyKinMeasureOrg &WristFlexion = ...BodyModel.Interface.Left.WristFlexion;
    AnyKinMeasureOrg &WristAbduction = ...BodyModel.Interface.Left.WristAbduction;
    Reaction.Type={Off,Off,Off,Off,Off,Off,Off,Off,Off,Off};
  };
  #endif
  
  
  #if BM_ARM_RIGHT == ON
  AnyKinDriver JntDriverRightArm = {
    AnyFunInterpol InterpolatedData = {
      AnyInputFile FileReader = {
          FileName = TEMP_PATH + "/" + MOCAP_OUTPUT_FILENAME_PREFIX + Main.ModelSetup.TrialSpecificData.TrialFileName + "-euler-rightarm.txt";
          FileErrorContinueOnOff = On;
          #if ANYBODY_V1 >= 6 & ANYBODY_V2 >= 1
          //HACK WORKAROUND. We need to garantie that that T0 is valid for interpolation, due
          // to a bug 6.1 beta
          ReloadOnOff = On;
          T0 = .....tArray-2*.....Kinematics.ApproxVelAccPerturb ;
          Data0 =  _ZEROS(..nDim, NumElemOf(T0) );
          #endif
      };
      Type  = Bspline;
      BsplineOrder = 4;
      Data = FileReader.Data;
      T = FileReader.T;
    };
    AnyKinMeasureOrg &SternoClavicularProtraction=...BodyModel.Interface.Right.SternoClavicularProtraction;
    AnyKinMeasureOrg &SternoClavicularElevation=...BodyModel.Interface.Right.SternoClavicularElevation;
    AnyKinMeasureOrg &SternoClavicularAxialRotation=...BodyModel.Interface.Right.SternoClavicularAxialRotation;

    AnyKinMeasureOrg &GlenohumeralFlexion = ...BodyModel.Interface.Right.GlenohumeralFlexion;
    AnyKinMeasureOrg &GlenohumeralExternalRotation = ...BodyModel.Interface.Right.GlenohumeralExternalRotation;
    AnyKinMeasureOrg &GlenohumeralAbduction = ...BodyModel.Interface.Right.GlenohumeralAbduction;
    AnyKinMeasureOrg &ElbowFlexion = ...BodyModel.Interface.Right.ElbowFlexion;
    AnyKinMeasureOrg &ElbowPronation = ...BodyModel.Interface.Right.ElbowPronation;
    AnyKinMeasureOrg &WristFlexion = ...BodyModel.Interface.Right.WristFlexion;
    AnyKinMeasureOrg &WristAbduction = ...BodyModel.Interface.Right.WristAbduction;
    Reaction.Type={Off,Off,Off,Off,Off,Off,Off,Off,Off,Off};
  };
  #endif
  
 #endif 
};




