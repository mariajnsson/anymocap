#include "helper_macros.any"


  // Dynamic balance residuals between the human and ground segments. 
  // This is also sometimes refered to as the 'Hand of God' in some biomechanical 
  // text books.
  AnyReacForce HumanGroundResiduals = 
  {
    #if MOCAP_HUMAN_GROUND_RESIDUALS == "Pelvis"
    AnyKinMeasure &PelvisPosX = ..BodyModel.Interface.Trunk.PelvisPosX;
    AnyKinMeasure &PelvisPosY = ..BodyModel.Interface.Trunk.PelvisPosY;
    AnyKinMeasure &PelvisPosZ = ..BodyModel.Interface.Trunk.PelvisPosZ;
    AnyKinMeasure &PelvisRotX = ..BodyModel.Interface.Trunk.PelvisRotX;
    AnyKinMeasure &PelvisRotY = ..BodyModel.Interface.Trunk.PelvisRotY;
    AnyKinMeasure &PelvisRotZ = ..BodyModel.Interface.Trunk.PelvisRotZ;
    #endif
    
    #if MOCAP_HUMAN_GROUND_RESIDUALS == "Trunk"
    AnyKinLinear Lin = { Ref = 0; AnyRefFrame& ref = ...BodyModel.Trunk.SegmentsThorax.ThoraxSeg; };
    AnyKinRotational Rot = { Type = RotAxesAngles; AnyRefFrame& ref = ...BodyModel.Trunk.SegmentsThorax.ThoraxSeg; };
    #endif
    
  };

AnyFolder JointsAndDrivers = {
#ifndef FORCE_MODEL_LOAD_WHEN_DATA_FILES_ARE_MISSING
  
  AnyKinDriver JntDriverTrunk = {
    
    #include "InterpolateJointAngleData.any"
    FileReader.FileName = TEMP_PATH + "/" + MOCAP_TEST_FILENAME_PREFIX + MOCAP_OUTPUT_FILENAME_PREFIX + Main.ModelSetup.TrialSpecificData.TrialFileName + "-euler-trunk.txt";
    // Get the rotation angles fromt the initial pelvis rotation matrix. 
    // This allows us to specify a default joint angle drivers which are close to the 
    // load time position. 
    RotAxisAnglesZYX InitPelvis(ROT = Main.ModelSetup.TrialSpecificData.InitialPositionOfBody.PelvisRotationMatrix) = { };
    /// The default data if no joint angles files have been generated.
    FileReader.Data0 = { Main.ModelSetup.TrialSpecificData.InitialPositionOfBody.PelvisPos[0],
                         Main.ModelSetup.TrialSpecificData.InitialPositionOfBody.PelvisPos[1],
                         Main.ModelSetup.TrialSpecificData.InitialPositionOfBody.PelvisPos[2],
                         InitPelvis.xRot, InitPelvis.yRot, InitPelvis.zRot, 
                         0,0,0,0
                         #ifndef _OLD_NECK_INTERFACE_
                         ,0,0
                         #endif
                       }'* (ONES(1,FileReader.Length0));

    AnyKinMeasure &PelvisPosX = ...BodyModel.Interface.Trunk.PelvisPosX;
    AnyKinMeasure &PelvisPosY = ...BodyModel.Interface.Trunk.PelvisPosY;
    AnyKinMeasure &PelvisPosZ = ...BodyModel.Interface.Trunk.PelvisPosZ;
    AnyKinMeasure &PelvisRotX = ...BodyModel.Interface.Trunk.PelvisRotX;
    AnyKinMeasure &PelvisRotY = ...BodyModel.Interface.Trunk.PelvisRotY;
    AnyKinMeasure &PelvisRotZ = ...BodyModel.Interface.Trunk.PelvisRotZ;
    AnyKinMeasure &PelvisThoraxExtension = ...BodyModel.Interface.Trunk.PelvisThoraxExtension;
    AnyKinMeasure &PelvisThoraxLateralBending = ...BodyModel.Interface.Trunk.PelvisThoraxLateralBending;
    AnyKinMeasure &PelvisThoraxRotation = ...BodyModel.Interface.Trunk.PelvisThoraxRotation;
    #ifdef _OLD_NECK_INTERFACE_
    AnyKinMeasure& NeckJoint = ...BodyModel.Interface.Trunk.NeckJoint;
    Reaction.Type={Off,Off,Off,Off,Off,Off,Off,Off,Off,Off};
    #else
    AnyKinMeasure& SkullThoraxFlexion = ...BodyModel.Interface.Trunk.SkullThoraxFlexion;
    AnyKinMeasure& SkullThoraxLateralBending = ...BodyModel.Interface.Trunk.SkullThoraxLateralBending;
    AnyKinMeasure& SkullThoraxRotation = ...BodyModel.Interface.Trunk.SkullThoraxRotation; 
    Reaction.Type= {Off,Off,Off,Off,Off,Off,Off,Off,Off,Off,Off,Off};    
    #endif
  };
  
  #if BM_LEG_LEFT == CONST_LEG_MODEL_TLEM  
  AnyKinDriver JntDriverLeftLegTD = {
    
    #include "InterpolateJointAngleData.any"
    FileReader.FileName = TEMP_PATH + "/" + MOCAP_TEST_FILENAME_PREFIX +MOCAP_OUTPUT_FILENAME_PREFIX + Main.ModelSetup.TrialSpecificData.TrialFileName + "-euler-leftlegtd.txt";
    FileReader.Data0 = ZEROS(nDim, FileReader.Length0 );
    
    AnyKinMeasure &HipFlexion = ...BodyModel.Interface.Left.HipFlexion;
    AnyKinMeasure &HipAbduction = ...BodyModel.Interface.Left.HipAbduction;
    AnyKinMeasure &HipExternalRotation = ...BodyModel.Interface.Left.HipExternalRotation;
    AnyKinMeasure &KneeFlexion = ...BodyModel.Interface.Left.KneeFlexion;
    AnyKinMeasure &AnklePlantarFlexion = ...BodyModel.Interface.Left.AnklePlantarFlexion;
    AnyKinMeasure &SubTalarEversion = ...BodyModel.Interface.Left.SubTalarEversion;
    Reaction.Type={Off,Off,Off,Off,Off,Off};
  };
  #endif
  
  
  #if BM_LEG_RIGHT == CONST_LEG_MODEL_TLEM  
  AnyKinDriver JntDriverRightLegTD = {
    #include "InterpolateJointAngleData.any"
    FileReader.FileName = TEMP_PATH + "/" + MOCAP_TEST_FILENAME_PREFIX +  MOCAP_OUTPUT_FILENAME_PREFIX + Main.ModelSetup.TrialSpecificData.TrialFileName + "-euler-rightlegtd.txt";
    FileReader.Data0 = ZEROS(nDim, FileReader.Length0 );

    AnyKinMeasure &HipFlexion = ...BodyModel.Interface.Right.HipFlexion;
    AnyKinMeasure &HipAbduction = ...BodyModel.Interface.Right.HipAbduction;
    AnyKinMeasure &HipExternalRotation = ...BodyModel.Interface.Right.HipExternalRotation;
    AnyKinMeasure &KneeFlexion = ...BodyModel.Interface.Right.KneeFlexion;
    AnyKinMeasure &AnklePlantarFlexion = ...BodyModel.Interface.Right.AnklePlantarFlexion;
    AnyKinMeasure &SubTalarEversion = ...BodyModel.Interface.Right.SubTalarEversion;
    Reaction.Type={Off,Off,Off,Off,Off,Off};
  };
  #endif

  
  
  #if BM_LEG_LEFT == CONST_LEG_MODEL_Leg 
  AnyKinDriver JntDriverLeftLeg = {
    #include "InterpolateJointAngleData.any"
    FileReader.FileName = TEMP_PATH + "/" + MOCAP_TEST_FILENAME_PREFIX + MOCAP_OUTPUT_FILENAME_PREFIX + Main.ModelSetup.TrialSpecificData.TrialFileName + "-euler-leftleg.txt";
    FileReader.Data0 = ZEROS(nDim, FileReader.Length0 );

    AnyKinMeasure &HipFlexion = ...BodyModel.Interface.Left.HipFlexion;
    AnyKinMeasure &HipAbduction = ...BodyModel.Interface.Left.HipAbduction;
    AnyKinMeasure &HipExternalRotation = ...BodyModel.Interface.Left.HipExternalRotation;
    AnyKinMeasure &KneeFlexion = ...BodyModel.Interface.Left.KneeFlexion;
    AnyKinMeasure &AnklePlantarFlexion = ...BodyModel.Interface.Left.AnklePlantarFlexion;
    AnyKinMeasure &AnkleEversion = ...BodyModel.Interface.Left.AnkleEversion;
    Reaction.Type={Off,Off,Off,Off,Off,Off};
  };
  #endif
  
  
  #if BM_LEG_RIGHT== CONST_LEG_MODEL_Leg 
  AnyKinDriver JntDriverRightLeg = {
    #include "InterpolateJointAngleData.any"
    FileReader.FileName = TEMP_PATH + "/" + MOCAP_TEST_FILENAME_PREFIX + MOCAP_OUTPUT_FILENAME_PREFIX + Main.ModelSetup.TrialSpecificData.TrialFileName + "-euler-rightleg.txt";
    FileReader.Data0 = ZEROS(nDim, FileReader.Length0 );

    AnyKinMeasure &HipFlexion = ...BodyModel.Interface.Right.HipFlexion;
    AnyKinMeasure &HipAbduction = ...BodyModel.Interface.Right.HipAbduction;
    AnyKinMeasure &HipExternalRotation = ...BodyModel.Interface.Right.HipExternalRotation;
    AnyKinMeasure &KneeFlexion = ...BodyModel.Interface.Right.KneeFlexion;
    AnyKinMeasure &AnklePlantarFlexion = ...BodyModel.Interface.Right.AnklePlantarFlexion;
    AnyKinMeasure &AnkleEversion = ...BodyModel.Interface.Right.AnkleEversion;
    Reaction.Type={Off,Off,Off,Off,Off,Off};
  };
  #endif
  
  
  
  #if BM_ARM_LEFT == ON
  AnyKinDriver JntDriverLeftArm = {
    #include "InterpolateJointAngleData.any"
    FileReader.FileName = TEMP_PATH + "/" + MOCAP_TEST_FILENAME_PREFIX + MOCAP_OUTPUT_FILENAME_PREFIX + Main.ModelSetup.TrialSpecificData.TrialFileName + "-euler-leftarm.txt";
    FileReader.Data0 = ZEROS(nDim, FileReader.Length0 );
    
    AnyKinMeasure &SternoClavicularProtraction=...BodyModel.Interface.Left.SternoClavicularProtraction;
    AnyKinMeasure &SternoClavicularElevation=...BodyModel.Interface.Left.SternoClavicularElevation;
    AnyKinMeasure &SternoClavicularAxialRotation=...BodyModel.Interface.Left.SternoClavicularAxialRotation;
    AnyKinMeasure &GlenohumeralFlexion = ...BodyModel.Interface.Left.GlenohumeralFlexion;
    AnyKinMeasure &GlenohumeralExternalRotation = ...BodyModel.Interface.Left.GlenohumeralExternalRotation;
    AnyKinMeasure &GlenohumeralAbduction = ...BodyModel.Interface.Left.GlenohumeralAbduction; 
    AnyKinMeasure &ElbowFlexion = ...BodyModel.Interface.Left.ElbowFlexion;
    AnyKinMeasure &ElbowPronation = ...BodyModel.Interface.Left.ElbowPronation;
    AnyKinMeasure &WristFlexion = ...BodyModel.Interface.Left.WristFlexion;
    AnyKinMeasure &WristAbduction = ...BodyModel.Interface.Left.WristAbduction;
    Reaction.Type={Off,Off,Off,Off,Off,Off,Off,Off,Off,Off};
  };
  #endif
  
  
  #if BM_ARM_RIGHT == ON
  AnyKinDriver JntDriverRightArm = {
    #include "InterpolateJointAngleData.any"
    FileReader.FileName = TEMP_PATH + "/" + MOCAP_TEST_FILENAME_PREFIX + MOCAP_OUTPUT_FILENAME_PREFIX + Main.ModelSetup.TrialSpecificData.TrialFileName + "-euler-rightarm.txt";
    FileReader.Data0 = ZEROS(nDim, FileReader.Length0 );

    AnyKinMeasure &SternoClavicularProtraction=...BodyModel.Interface.Right.SternoClavicularProtraction;
    AnyKinMeasure &SternoClavicularElevation=...BodyModel.Interface.Right.SternoClavicularElevation;
    AnyKinMeasure &SternoClavicularAxialRotation=...BodyModel.Interface.Right.SternoClavicularAxialRotation;

    AnyKinMeasure &GlenohumeralFlexion = ...BodyModel.Interface.Right.GlenohumeralFlexion;
    AnyKinMeasure &GlenohumeralExternalRotation = ...BodyModel.Interface.Right.GlenohumeralExternalRotation;
    AnyKinMeasure &GlenohumeralAbduction = ...BodyModel.Interface.Right.GlenohumeralAbduction;
    AnyKinMeasure &ElbowFlexion = ...BodyModel.Interface.Right.ElbowFlexion;
    AnyKinMeasure &ElbowPronation = ...BodyModel.Interface.Right.ElbowPronation;
    AnyKinMeasure &WristFlexion = ...BodyModel.Interface.Right.WristFlexion;
    AnyKinMeasure &WristAbduction = ...BodyModel.Interface.Right.WristAbduction;
    Reaction.Type={Off,Off,Off,Off,Off,Off,Off,Off,Off,Off};
  };
  #endif
  
 #endif 
};




